name: Code Coverage

on:
  push:
    branches:
      - "main"
      - "dev"
  pull_request:

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    env:
      OS: ${{ matrix.os }}
      PYTHON_VERSION: ${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: ./.github/actions/setup-python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run tests
        run: poetry run pytest -n auto --cov-report xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          env_vars: OS,PYTHON_VERSION

  test-pg:
    name: Test PostgreSQL
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: ./.github/actions/setup-python
        with:
          python-version: "3.10"

      - name: Run tests
        run: |
          sed -ie "s#sqlite+aiosqlite:///:memory:#postgresql+asyncpg://postgres:postgres@localhost:5432/postgres#g" tests/conftest.py
          poetry run pytest -n auto --cov-report xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          env_vars: OS,PYTHON_VERSION

  test-mysql:
    name: Test MySQL
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        env:
          MYSQL_USER: mysql
          MYSQL_PASSWORD: mysql
          MYSQL_DATABASE: mysql
        ports:
          - 3306:3306
        options: --health-cmd "mysqladmin ping -h localhost" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: ./.github/actions/setup-python
        with:
          python-version: "3.10"

      - name: Run tests
        run: |
          sed -ie "s#sqlite+aiosqlite:///:memory:#postgresql+asyncpg://mysql+aiomysql:://mysql:mysql@localhost:3306/mysql#g" tests/conftest.py
          poetry run pytest -n auto --cov-report xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          env_vars: OS,PYTHON_VERSION
